PrefabFiles = {
    "antivenom",
    "ashfx",
    "babyox",
    "ballphin",
    "ballphin_spawner",
    "ballphinhouse",
    "ballphinpod",
    "bamboo",
    "barrel_gunpowder",
    "bermudatriangle",
    "berrybush2_snake",
    "bioluminescence",
    "bioluminescence_spawner",
    "blubber",
    "boatcannon",
    "boatcontainer_classified",
    "boatlamps",
    "boatrepairkit",
    "boats",
    "bottlelantern",
    "buoy",
    "cannonshot",
    "chess_navy_spawner",
    "chiminea",
    "chimineafire",
    "coconade",
    "coconut",
    "coffeebush",
    "coral",
    "coral_brain",
    "coral_brain_rock",
    "corallarve",
    "crab",
    "crabhole",
    "crate",
    "crocodog",
    "cutlass",
    "dorsalfin",
    "doydoy",
    "doydoyegg",
    "doydoyfeather",
    "doydoynest",
    "dragoonden",
    "dragoonfire",
    "dubloon",
    "edgefog",
    "elephantcactus",
    "fabric",
    "fish_med",
    "fish_tropical",
    "fishfarm",
    "fishfarm_sign",
    "fishinhole",
    "flamegeyser",
    "flood",
    "flotsam",
    "flup",
    "flupspawner",
    "grass_water",
    "hail",
    "haildrop",
    "hail_ice",
    "harpoon",
    "ia_armor",
    "ia_birds",
    "ia_blowdart",
    "ia_chests",
    "ia_hats",
    "ia_marsh_plant",
    "ia_monsterwarningsounds",
    "ia_placeholder", --exactly what it says on the tin: a temporary file for registering undefined prefabs for worldgen
    "ia_plantables",
    "ia_preparedfoods",
    "ia_spear",
    "ia_trinkets",
    "ia_veggies",
    "ia_walls",
    "icemaker",
    "inv_bamboo",
    "inv_vine",
    "inventorywaterygrave",
    "jellyfish",
    "jellyfish_planted",
    "jellyfish_spawner",
    "jungletrees",
    "jungletreeseed",
    "knightboat",
    "knightboat_cannon",
    "lavaerupt",
    "leif_palm",
    "limestonenugget",
    "limpets",
    "livingjungletree",
    "lobster",
    "lobsterhole",
    "machete",
    "magic_seal",
    "magma_rocks",
    "mangrove",
    "mermfisher",
    "mermhouse_fisher",
    "messagebottle",
    "mosquito_poison",
    "mosquitosack_yellow",
    "mussel",
    "mussel_farm",
    "mussel_stick",
    "mysterymeat",
    "obsidian",
    "obsidian_workbench",
    "obsidianaxe",
    "obsidianfirefire",
    "obsidianfirepit",
    "obsidiantoollight",
    "oceanfog",
    "octopusking",
    "ox",
    "ox_flute",
    "ox_horn",
    "oxherd",
    "packim_fishbone",
    "packim",
    "palmleaf",
    "palmleaf_umbrella",
    "palmleafhut",
    "palmtrees",
    "pirateghost",
    "piratepack",
	"piratihatitator",
    "poisonbalm",
    "poisonbubble",
    "poisonhole",
    "poisonmistarea",
    "poisonmistparticle",
    -- "portablecookpot",
    "primeape",
    "primeapebarrel",
    "rainbowjellyfish",
    "rainbowjellyfish_planted",
    "rainbowjellyfish_spawner",
    "rainbowjellyfishlight",
    "rawling",
    "rock_coral",
    "rock_limpet",
    "rock_obsidian",
    "roe",
    "rowboat_wake",
    "sail",
    "sand",
    -- "sandbag", --Not used, does not work, neither do the animations, just don't use it! -M
    "sandbagsmall",
    "sandcastle",
    "sanddune",
    "sea_chiminea",
    "sea_lab",
    "sea_yard",
    "sea_yard_arms_fx",
    "seagullspawner",
    "seasack",
    "seashell",
    "seashell_beached",
    "seatrap",
    "seaweed",
    "seaweed_planted",
    "shadowcreature_sea",
    "shadowwaxwell_boat",
    "shark_fin",
    "shark_gills",
    "sharkitten",
    "sharkittenspawner",
    "sharx",
    "shipwreck",
    "slotmachine",
    "snake",
    "snakeden",
    "snakeoil",
    "snakeskin",
    "solofish",
    "spearlauncher",
    "chefpack",
    "stungray",
    "stungray_spawner",
    "sunkenprefab",
    "sweet_potato",
    "swordfish",
    "swordfish_spawner",
    "tar",
    "tar_extractor",
    "tar_pool",
    "tarlamp",
    "telescope",
    "terraformstaff", -- debug item
    "thatchpack",
    "tidalpool",
    "tigereye",
    "tigershark",
    "tigersharkshadow",
    "trawlnet",
    "treeguard_coconut",
    "trident",
    "tropicalfan",
    "tropical_spider_warrior",
    "tunacan",
    "turbine_blades",
    "twister",
    "twister_seal",
    "venomgland",
    "vine",
    "volcano",
    "volcano_altar",
    "volcano_exit",
    "volcano_shrub",
    "volcanolavafx",
    --"wallyintro",
    -- "warly",
    -- "warly_none",
    "wave_ripple",
    "wave_shimmer",
    "wave_shore",
    "whale",
    "whale_bubbles",
    "whale_carcass",
    "wildbore",
    "wildborehead",
    "wildborehouse",
}

Assets = {
    --Asset("SOUND", "sound/ia_hurricane.fsb"),
    --Asset("SOUND", "sound/ia_rain.fsb"),
    --Asset("SOUND", "sound/ia_green.fsb"),
    --Asset("SOUND", "sound/ia_mild.fsb"),
    --Asset("SOUND", "sound/ia_wet.fsb"),
    --Asset("SOUND", "sound/ia_dry.fsb"),
    --Asset("SOUND", "sound/ia_voice.fsb"),
    --Asset("SOUND", "sound/ia_sfx.fsb"),
    --Asset("SOUND", "sound/ia_music.fsb"),
    --Asset("SOUNDPACKAGE", "sound/ia.fev"),

    ------------------------------------------------------------

    Asset("IMAGE", "images/colour_cubes/sw_mild_day_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/SW_mild_dusk_cc.tex"),
    -- Asset("IMAGE", "images/colour_cubes/SW_mild_night_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/SW_wet_day_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/SW_wet_dusk_cc.tex"),
    -- Asset("IMAGE", "images/colour_cubes/SW_wet_night_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/sw_green_day_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/sw_green_dusk_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/SW_dry_day_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/SW_dry_dusk_cc.tex"),
    -- Asset("IMAGE", "images/colour_cubes/SW_dry_night_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/sw_volcano_cc.tex"),
    Asset("IMAGE", "images/colour_cubes/sw_volcano_active_cc.tex"),
	
    Asset("ANIM", "anim/poison_meter_overlay.zip"),
    Asset("ANIM", "anim/trawlnet_meter.zip"),
    Asset("ANIM", "anim/obsidian_tool_meter.zip"),

    Asset("ATLAS", "images/overlays/fx3.xml"),
    Asset("IMAGE", "images/overlays/fx3.tex"),

    Asset("IMAGE", "images/ia_inventoryimages.tex"),
    Asset("ATLAS", "images/ia_inventoryimages.xml"),
    Asset("IMAGE", "images/ia_hud.tex"),
    Asset("ATLAS", "images/ia_hud.xml"),

    --Asset("IMAGE", "images/ia_minimapimages.tex"),
    --Asset("ATLAS", "images/ia_minimapimages.xml"),
    Asset("ATLAS", "images/minimap/ia_minimap.xml"),
    Asset("IMAGE", "images/minimap/ia_minimap.tex"),
	
	--character images
	-- Asset( "IMAGE", "images/saveslot_portraits/warly.tex" ),
	-- Asset( "ATLAS", "images/saveslot_portraits/warly.xml" ),

	-- Asset( "IMAGE", "images/selectscreen_portraits/warly.tex" ),
	-- Asset( "ATLAS", "images/selectscreen_portraits/warly.xml" ),
	
	-- Asset( "IMAGE", "images/selectscreen_portraits/warly_silho.tex" ),
	-- Asset( "ATLAS", "images/selectscreen_portraits/warly_silho.xml" ),

	-- Asset( "IMAGE", "bigportraits/warly.tex" ),
	-- Asset( "ATLAS", "bigportraits/warly.xml" ),
	
	-- Asset( "IMAGE", "bigportraits/warly_none.tex" ),
	-- Asset( "ATLAS", "bigportraits/warly_none.xml" ),
	
	-- Asset( "IMAGE", "images/avatars/avatar_warly.tex" ),
	-- Asset( "ATLAS", "images/avatars/avatar_warly.xml" ),
	
	-- Asset( "IMAGE", "images/avatars/avatar_ghost_warly.tex" ),
	-- Asset( "ATLAS", "images/avatars/avatar_ghost_warly.xml" ),
	
	-- Asset( "IMAGE", "images/avatars/self_inspect_warly.tex" ),
	-- Asset( "ATLAS", "images/avatars/self_inspect_warly.xml" ),
	
	-- Asset( "IMAGE", "images/names_warly.tex" ),
	-- Asset( "ATLAS", "images/names_warly.xml" ),
	
	-- Asset( "IMAGE", "images/names_gold_warly.tex" ),
	-- Asset( "ATLAS", "images/names_gold_warly.xml" ),
	--end of character images

    Asset("ANIM", "anim/ia_player_actions_twister.zip"),
    Asset("ANIM", "anim/ia_sailing.zip"),
    Asset("ANIM", "anim/ia_jumping.zip"),

    Asset("ANIM", "anim/ripple_build.zip"),
	
    Asset("ANIM", "anim/floodtile.zip"),

    Asset("ANIM", "anim/werebeaver_boat_death.zip"),
    Asset("ANIM", "anim/player_tornado.zip"),
    Asset("ANIM", "anim/player_boat_death.zip"),
    Asset("ANIM", "anim/swap_paddle.zip"),
    Asset("ANIM", "anim/player_actions_telescope.zip"),
    Asset("ANIM", "anim/player_actions_speargun.zip"),

    Asset("ANIM", "anim/swap_sailface.zip"),

    Asset("ANIM", "anim/boat_hud_cargo.zip"),
    Asset("ANIM", "anim/boat_hud_encrusted.zip"),
    Asset("ANIM", "anim/boat_hud_raft.zip"),
    Asset("ANIM", "anim/boat_hud_row.zip"),  
    Asset("ANIM", "anim/boat_inspect_cargo.zip"),
    Asset("ANIM", "anim/boat_inspect_encrusted.zip"),
    Asset("ANIM", "anim/boat_inspect_raft.zip"),
    Asset("ANIM", "anim/boat_inspect_row.zip"),

    Asset("ANIM", "anim/boat_health.zip"),

    Asset("ANIM", "anim/sail_visual.zip"),
    Asset("ANIM", "anim/sail_visual_idle.zip"),
    Asset("ANIM", "anim/sail_visual_trawl.zip"),

    -- For minisign
    Asset("ATLAS_BUILD", "images/ia_inventoryimages.xml", 256),

    --I am loading these here because the birdcage needs them
    Asset("ANIM", "anim/seagull_build.zip"),
    Asset("ANIM", "anim/parrot_build.zip"),
    Asset("ANIM", "anim/parrot_pirate_build.zip"),
    Asset("ANIM", "anim/toucan_build.zip"),
    Asset("ANIM", "anim/cormorant_build.zip"),
    --I am loading this here because the meatrack needs them
    Asset("ANIM", "anim/meat_rack_food_sw.zip"),
    --I am loading these here because the cookpot needs them
    -- Asset("ANIM", "anim/bananapop.zip"),
    Asset("ANIM", "anim/bisque.zip"),
    Asset("ANIM", "anim/californiaroll.zip"),
    Asset("ANIM", "anim/caviar.zip"),
    -- Asset("ANIM", "anim/ceviche.zip"),
    Asset("ANIM", "anim/coffee.zip"),
    -- Asset("ANIM", "anim/freshfruitcrepes.zip"),
    Asset("ANIM", "anim/jellyopop.zip"),
    Asset("ANIM", "anim/lobsterbisque.zip"),
    Asset("ANIM", "anim/lobsterdinner.zip"),
    -- Asset("ANIM", "anim/monstertartare.zip"),
    Asset("ANIM", "anim/musselbouillabaise.zip"),
    Asset("ANIM", "anim/seafoodgumbo.zip"),
    Asset("ANIM", "anim/sharkfinsoup.zip"),
    Asset("ANIM", "anim/surfnturf.zip"),
    Asset("ANIM", "anim/sweetpotatosouffle.zip"),
    Asset("ANIM", "anim/tropicalbouillabaisse.zip"),
    --I am loading these here because the farm crop needs them
	--This SHOULD be handled in postinit/sim.lua, but apparently not -M
	Asset("ANIM", "anim/sweet_potato.zip"),

	--Dug Turf, doesn't get handled by DynamicTileManager
	Asset("ANIM", "anim/turf_ia.zip"),

	--Variant animations
	--could be loaded lazy once their vanilla counterpart loads, but I hope this way is not too bad either. -M
    Asset("ANIM", "anim/krampus_hawaiian_build.zip"),
    Asset("ANIM", "anim/grassgreen_build.zip"),
    Asset("ANIM", "anim/cutgrassgreen.zip"),
    Asset("ANIM", "anim/log_tropical.zip"),
    Asset("ANIM", "anim/butterfly_tropical_basic.zip"),
    Asset("ANIM", "anim/butterfly_tropical_wings.zip"),
    Asset("ANIM", "anim/bananas.zip"),

	--for strong wind gust
	--not loaded lazy because they're almost guaranteed to load immediately anyways -M
    Asset("ANIM", "anim/floatable_anims/grass.zip"),
    Asset("ANIM", "anim/floatable_anims/grass1.zip"),
    Asset("ANIM", "anim/floatable_anims/sapling.zip"),
}

AddMinimapAtlas("images/minimap/ia_minimap.xml")


local replaceAnims = { --these few could probably be loaded parallel -M
	"tree_leaf_normal",
	"evergreen_short_normal",
	"evergreen_tall_old",
}

local REPLACE_ANIM = {}

for i, v in ipairs(replaceAnims) do
    --table.insert(Assets, Asset("ANIM", "anim/floatable_anims/"..v..".zip"))
    REPLACE_ANIM["anim/"..v..".zip"] = "anim/floatable_anims/"..v..".zip"
end

local _RegisterPrefabsImpl = GLOBAL.RegisterPrefabsImpl
GLOBAL.RegisterPrefabsImpl = function( prefab, ...)
    for i,asset in ipairs(prefab.assets) do
        if REPLACE_ANIM[ asset.file ] then
            asset.file = REPLACE_ANIM[asset.file]
        end
    end
    _RegisterPrefabsImpl( prefab, ...)
end